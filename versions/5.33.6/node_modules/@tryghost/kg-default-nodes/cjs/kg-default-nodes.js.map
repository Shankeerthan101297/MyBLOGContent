{"version":3,"file":"kg-default-nodes.js","sources":["../lib/KoenigDecoratorNode.js","../lib/nodes/image/ImageParser.js","../lib/utils/get-available-image-widths.js","../lib/utils/is-local-content-image.js","../lib/utils/is-unsplash-image.js","../lib/utils/srcset-attribute.js","../lib/utils/resize-image.js","../lib/nodes/image/ImageRenderer.js","../lib/nodes/image/ImageNode.js","../lib/kg-default-nodes.js"],"sourcesContent":["import {DecoratorNode} from 'lexical';\n\nexport class KoenigDecoratorNode extends DecoratorNode {}\n\nexport function $isKoenigCard(node) {\n    return node instanceof KoenigDecoratorNode;\n}\n","export class ImageParser {\n    constructor($createNode) {\n        this.$createNode = $createNode;\n    }\n\n    get DOMConversionMap() {\n        const self = this;\n\n        return {\n            img: () => ({\n                conversion(domNode) {\n                    if (domNode.tagName === 'IMG') {\n                        const {alt: altText, src, title, width, height} = domNode;\n                        const node = self.$createNode({altText, src, title, width, height});\n                        return {node};\n                    }\n\n                    return null;\n                },\n                priority: 1\n            })\n            // TODO: add <figure> and other handling from kg-parser-plugins\n        };\n    }\n}\n","export const getAvailableImageWidths = function (image, imageSizes) {\n    // get a sorted list of the available responsive widths\n    const imageWidths = Object.values(imageSizes)\n        .map(({width}) => width)\n        .sort((a, b) => a - b);\n\n    // select responsive widths that are usable based on the image width\n    const availableImageWidths = imageWidths\n        .filter(width => width <= image.width);\n\n    // add the original image size to the responsive list if it's not captured by largest responsive size\n    // - we can't know the width/height of the original `src` image because we don't know if it was resized\n    //   or not. Adding the original image to the responsive list ensures we're not showing smaller sized\n    //   images than we need to be\n    if (image.width > availableImageWidths[availableImageWidths.length - 1] && image.width < imageWidths[imageWidths.length - 1]) {\n        availableImageWidths.push(image.width);\n    }\n\n    return availableImageWidths;\n};\n","export const isLocalContentImage = function (url, siteUrl = '') {\n    const normalizedSiteUrl = siteUrl.replace(/\\/$/, '');\n    const imagePath = url.replace(normalizedSiteUrl, '');\n    return /^(\\/.*|__GHOST_URL__)\\/?content\\/images\\//.test(imagePath);\n};\n","export const isUnsplashImage = function (url) {\n    return /images\\.unsplash\\.com/.test(url);\n};\n","import {isLocalContentImage} from './is-local-content-image';\nimport {getAvailableImageWidths} from './get-available-image-widths';\nimport {isUnsplashImage} from './is-unsplash-image';\n\n// default content sizes: [600, 1000, 1600, 2400]\n\nexport const getSrcsetAttribute = function ({src, width, options}) {\n    if (!options.imageOptimization || options.imageOptimization.srcsets === false || !width || !options.imageOptimization.contentImageSizes) {\n        return;\n    }\n\n    if (isLocalContentImage(src, options.siteUrl) && options.canTransformImage && !options.canTransformImage(src)) {\n        return;\n    }\n\n    const srcsetWidths = getAvailableImageWidths({width}, options.imageOptimization.contentImageSizes);\n\n    // apply srcset if this is a relative image that matches Ghost's image url structure\n    if (isLocalContentImage(src, options.siteUrl)) {\n        const [, imagesPath, filename] = src.match(/(.*\\/content\\/images)\\/(.*)/);\n        const srcs = [];\n\n        srcsetWidths.forEach((srcsetWidth) => {\n            if (srcsetWidth === width) {\n                // use original image path if width matches exactly (avoids 302s from size->original)\n                srcs.push(`${src} ${srcsetWidth}w`);\n            } else if (srcsetWidth <= width) {\n                // avoid creating srcset sizes larger than intrinsic image width\n                srcs.push(`${imagesPath}/size/w${srcsetWidth}/${filename} ${srcsetWidth}w`);\n            }\n        });\n\n        if (srcs.length) {\n            return srcs.join(', ');\n        }\n    }\n\n    // apply srcset if this is an Unsplash image\n    if (isUnsplashImage(src)) {\n        const unsplashUrl = new URL(src);\n        const srcs = [];\n\n        srcsetWidths.forEach((srcsetWidth) => {\n            unsplashUrl.searchParams.set('w', srcsetWidth);\n            srcs.push(`${unsplashUrl.href} ${srcsetWidth}w`);\n        });\n\n        return srcs.join(', ');\n    }\n};\n\nexport const setSrcsetAttribute = function (elem, image, options) {\n    if (!elem || !['IMG', 'SOURCE'].includes(elem.tagName) || !elem.getAttribute('src') || !image) {\n        return;\n    }\n\n    const {src, width} = image;\n    const srcset = getSrcsetAttribute({src, width, options});\n\n    if (srcset) {\n        elem.setAttribute('srcset', srcset);\n    }\n};\n","export const resizeImage = function (image, {width: desiredWidth, height: desiredHeight} = {}) {\n    const {width, height} = image;\n    const ratio = width / height;\n\n    if (desiredWidth) {\n        const resizedHeight = Math.round(desiredWidth / ratio);\n\n        return {\n            width: desiredWidth,\n            height: resizedHeight\n        };\n    }\n\n    if (desiredHeight) {\n        const resizedWidth = Math.round(desiredHeight * ratio);\n\n        return {\n            width: resizedWidth,\n            height: desiredHeight\n        };\n    }\n};\n","import {getAvailableImageWidths} from '../../utils/get-available-image-widths';\nimport {isLocalContentImage} from '../../utils/is-local-content-image';\nimport {setSrcsetAttribute} from '../../utils/srcset-attribute';\nimport {resizeImage} from '../../utils/resize-image';\n\nexport function renderImageNodeToDOM(node, options = {}) {\n    /* c8 ignore start */\n    if (!options.createDocument) {\n        let document = typeof window !== 'undefined' && window.document;\n\n        if (!document) {\n            throw new Error('renderImageNodeToDOM() must be passed a `createDocument` function as an option when used in a non-browser environment'); // eslint-disable-line\n        }\n\n        options.createDocument = function () {\n            return document;\n        };\n    }\n    /* c8 ignore stop */\n\n    const document = options.createDocument();\n\n    if (!node.getSrc() || node.getSrc().trim() === '') {\n        return document.createTextNode('');\n    }\n\n    const figure = document.createElement('figure');\n\n    let figureClasses = 'kg-card kg-image-card';\n    if (node.getCardWidth() !== 'regular') {\n        figureClasses += ` kg-width-${node.getCardWidth()}`;\n    }\n\n    figure.setAttribute('class', figureClasses);\n\n    const img = document.createElement('img');\n    img.setAttribute('src', node.getSrc());\n    img.setAttribute('alt', node.getAltText());\n    img.setAttribute('loading', 'lazy');\n\n    if (node.getTitle()) {\n        img.setAttribute('title', node.getTitle());\n    }\n\n    if (node.getImgWidth() && node.getImgHeight()) {\n        img.setAttribute('width', node.getImgWidth());\n        img.setAttribute('height', node.getImgHeight());\n    }\n\n    // images can be resized to max width, if that's the case output\n    // the resized width/height attrs to ensure 3rd party gallery plugins\n    // aren't affected by differing sizes\n    const {canTransformImage} = options;\n    const {defaultMaxWidth} = options.imageOptimization || {};\n    if (\n        defaultMaxWidth &&\n            node.getImgWidth() > defaultMaxWidth &&\n            isLocalContentImage(node.getSrc(), options.siteUrl) &&\n            canTransformImage &&\n            canTransformImage(node.getSrc())\n    ) {\n        const imageDimensions = {\n            width: node.getImgWidth(),\n            height: node.getImgHeight()\n        };\n        const {width, height} = resizeImage(imageDimensions, {width: defaultMaxWidth});\n        img.setAttribute('width', width);\n        img.setAttribute('height', height);\n    }\n\n    if (options.target !== 'email') {\n        const imgAttributes = {\n            src: node.getSrc(),\n            width: node.getImgWidth(),\n            height: node.getImgHeight()\n        };\n        setSrcsetAttribute(img, imgAttributes, options);\n\n        if (img.getAttribute('srcset') && node.getImgWidth() && node.getImgWidth() >= 720) {\n            // standard size\n            if (!node.getCardWidth() || node.getCardWidth() === 'regular') {\n                img.setAttribute('sizes', '(min-width: 720px) 720px');\n            }\n\n            if (node.getCardWidth() === 'wide' && node.getImgWidth() >= 1200) {\n                img.setAttribute('sizes', '(min-width: 1200px) 1200px');\n            }\n        }\n    }\n\n    // Outlook is unable to properly resize images without a width/height\n    // so we add that at the expected size in emails (600px) and use a higher\n    // resolution image to keep images looking good on retina screens\n    if (options.target === 'email' && node.getImgWidth() && node.getImgHeight()) {\n        let imageDimensions = {\n            width: node.getImgWidth(),\n            height: node.getImgHeight()\n        };\n        if (node.getImgWidth() >= 600) {\n            imageDimensions = resizeImage(imageDimensions, {width: 600});\n        }\n        img.setAttribute('width', imageDimensions.width);\n        img.setAttribute('height', imageDimensions.height);\n\n        if (isLocalContentImage(node.getSrc(), options.siteUrl) && options.canTransformImage?.(node.getSrc())) {\n            // find available image size next up from 2x600 so we can use it for the \"retina\" src\n            const availableImageWidths = getAvailableImageWidths(node, options.imageOptimization.contentImageSizes);\n            const srcWidth = availableImageWidths.find(width => width >= 1200);\n\n            if (!srcWidth || srcWidth === node.getImgWidth()) {\n                // do nothing, width is smaller than retina or matches the original node src\n            } else {\n                const [, imagesPath, filename] = node.getSrc().match(/(.*\\/content\\/images)\\/(.*)/);\n                img.setAttribute('src', `${imagesPath}/size/w${srcWidth}/${filename}`);\n            }\n        }\n    }\n\n    figure.appendChild(img);\n\n    if (node.getCaption()) {\n        const caption = document.createElement('figcaption');\n        caption.innerHTML = node.getCaption();\n        figure.appendChild(caption);\n    }\n\n    return figure;\n}\n","import {createCommand} from 'lexical';\nimport {KoenigDecoratorNode} from '../../KoenigDecoratorNode';\nimport {ImageParser} from './ImageParser';\nimport {renderImageNodeToDOM} from './ImageRenderer';\n\nexport const INSERT_IMAGE_COMMAND = createCommand();\nexport const UPLOAD_IMAGE_COMMAND = createCommand();\n\nexport class ImageNode extends KoenigDecoratorNode {\n    // payload properties\n    __src;\n    __caption;\n    __title;\n    __altText;\n    __cardWidth;\n    __width;\n    __height;\n\n    static getType() {\n        return 'image';\n    }\n\n    static clone(node) {\n        return new ImageNode(\n            node.getDataset(),\n            node.__key\n        );\n    }\n\n    // used by `@tryghost/url-utils` to transform URLs contained in the serialized JSON\n    static get urlTransformMap() {\n        return {\n            src: 'url',\n            caption: 'html'\n        };\n    }\n\n    getDataset() {\n        return {\n            src: this.__src,\n            caption: this.__caption,\n            title: this.__title,\n            altText: this.__altText,\n            width: this.__width,\n            height: this.__height,\n            cardWidth: this.__cardWidth\n        };\n    }\n\n    // from https://github.com/TryGhost/Ghost/blob/main/ghost/admin/app/components/gh-image-uploader.js#L18\n    static extensionTypes = ['gif', 'jpg', 'jpeg', 'png', 'svg', 'svgz', 'webp'];\n    static mimeTypes = ['image/gif', 'image/jpg', 'image/jpeg', 'image/png', 'image/svg+xml', 'image/webp'];\n\n    constructor({src, caption, title, altText, cardWidth, width, height} = {}, key) {\n        super(key);\n        this.__src = src || '';\n        this.__title = title || '';\n        this.__caption = caption || '';\n        this.__altText = altText || '';\n        this.__width = width || null;\n        this.__height = height || null;\n        this.__cardWidth = cardWidth || 'regular';\n    }\n\n    static importJSON(serializedNode) {\n        const {src, caption, title, altText, width, height, cardWidth} = serializedNode;\n        const node = $createImageNode({\n            src,\n            caption,\n            title,\n            altText,\n            width,\n            height,\n            cardWidth\n        });\n        return node;\n    }\n\n    exportJSON() {\n        // checks if src is a data string\n        const src = this.getSrc();\n        const isBlob = src.startsWith('data:');\n        const dataset = {\n            type: 'image',\n            src: isBlob ? '<base64String>' : this.getSrc(),\n            width: this.getImgWidth(),\n            height: this.getImgHeight(),\n            title: this.getTitle(),\n            altText: this.getAltText(),\n            caption: this.getCaption(),\n            cardWidth: this.getCardWidth()\n        };\n        return dataset;\n    }\n\n    static importDOM() {\n        const parser = new ImageParser($createImageNode);\n        return parser.DOMConversionMap;\n    }\n\n    exportDOM(options = {}) {\n        const element = renderImageNodeToDOM(this, options);\n        return {element};\n    }\n\n    /* c8 ignore start */\n    createDOM() {\n        const element = document.createElement('div');\n        return element;\n    }\n\n    updateDOM() {\n        return false;\n    }\n\n    isInline() {\n        return false;\n    }\n    /* c8 ignore stop */\n\n    getSrc() {\n        return this.__src;\n    }\n\n    setSrc(src) {\n        const writable = this.getWritable();\n        return writable.__src = src;\n    }\n\n    getTitle() {\n        return this.__title;\n    }\n\n    setTitle(title) {\n        const writable = this.getWritable();\n        return writable.__title = title;\n    }\n\n    setCardWidth(cardWidth) {\n        const writable = this.getWritable();\n        return writable.__cardWidth = cardWidth;\n    }\n\n    getCardWidth() {\n        return this.__cardWidth;\n    }\n\n    getImgWidth() {\n        return this.__width;\n    }\n\n    setImgWidth(width) {\n        const writable = this.getWritable();\n        return writable.__width = width;\n    }\n\n    getImgHeight() {\n        return this.__height;\n    }\n\n    setImgHeight(height) {\n        const writable = this.getWritable();\n        return writable.__height = height;\n    }\n\n    getCaption() {\n        return this.__caption;\n    }\n\n    setCaption(caption) {\n        const writable = this.getWritable();\n        return writable.__caption = caption;\n    }\n\n    getAltText() {\n        return this.__altText;\n    }\n\n    setAltText(altText) {\n        const writable = this.getWritable();\n        return writable.__altText = altText;\n    }\n\n    // should be overridden\n    /* c8 ignore next 3 */\n    decorate() {\n        return '';\n    }\n}\n\nexport const $createImageNode = (dataset) => {\n    return new ImageNode(dataset);\n};\n\nexport function $isImageNode(node) {\n    return node instanceof ImageNode;\n}\n","import * as image from './nodes/image/ImageNode';\n\n// re-export everything for easier importing\nexport * from './KoenigDecoratorNode';\nexport * from './nodes/image/ImageNode';\nexport * from './nodes/image/ImageParser';\n\n// export convenience objects for use elsewhere\nexport const DEFAULT_NODES = [\n    image.ImageNode\n];\n"],"names":["DecoratorNode","createCommand","image.ImageNode"],"mappings":"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"}